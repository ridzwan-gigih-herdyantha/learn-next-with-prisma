import Head from 'next/head';
import prisma from '../lib/prisma';
import Layout from '../components/Layout';
import { useState } from 'react';
import { useRouter } from 'next/router';
import style from "../styles/index.module.css";

export const getStaticProps = async () => {
  const feed = await prisma.post.findMany({
      where: { published: true },
      include: {
        comments: {
              select: { content: true },
          },
      },
  });
  return {
      props: { feed },
      revalidate: 10,
  };
}

export default function Home({ feed }) {
  const [loading, setLoading] = useState();
  const router = useRouter();
  const deletePost = async postId => {
    try {
      setLoading(true);
      await fetch('/api/post/delete?id=' + postId, {
        method: "DELETE",
        headers: {"Content-Type": "application/json"}
      });

      setLoading(false);
      await router.push("/");
    } catch (error) {
      console.log("error", error);
      setLoading(false);
    }

  }
  return (
    <Layout>
        <Head>
            <title>Posts</title>
            <meta name= "description" content=" Generated by create next app"/>
            <link rel="icon" href="/favicon.ico" />
        </Head>
        {
            feed.length > 0 ? (
                feed.map((item, index) => (
                    <>
                        <div className={style.postcard} key={index}>
                            <span style={{ fontWeight: 'bold' }}>{item.title}</span>      
                            <p>{item.content}</p>               
                            <div>
                                <button onClick={() => deletePost(item.id)}>{
                                    loading ? "Loading": "Delete"
                                }</button>
                            </div>
                        </div>
                </>
                ))
            ) : (
                <div>
                    <p>No published posts found.</p>
                </div>
            )
        }
    </Layout>
)}